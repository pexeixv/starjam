---
interface Props {
    images: Array<String>;
}
const { images } = Astro.props as Props;
---

<div class="max-w-xl">
    <div class="relative">
        {
            images.length > 2 && (
                <i
                    class="fas fa-chevron-left text-white absolute top-1/2 left-4 -translate-y-1/2 drop-shadow-lg cursor-pointer p-4"
                    id="prev-button"
                />
            )
        }
        <img
            src={images[0]}
            alt=""
            class="object-contain aspect-square"
            id="main-image"
            data-images={JSON.stringify(images)}
        />
        {
            images.length > 2 && (
                <i
                    class="fas fa-chevron-right text-white absolute top-1/2 right-4 -translate-y-1/2 drop-shadow-lg cursor-pointer p-4"
                    id="next-button"
                />
            )
        }
    </div>
    {
        images.length > 2 && (
            <div
                class="mt-12 flex items-center justify-center w-full gap-4 flex-wrap"
                id="small-images"
            >
                {images.map((image) => (
                    <img
                        src={image}
                        class="aspect-square object-cover h-8 sm:h-12 cursor-pointer transition-all"
                    />
                ))}
            </div>
        )
    }

    <script>
        const mainImage = document.querySelector(
            "#main-image"
        ) as HTMLImageElement;
        const smallImages = document.querySelectorAll(
            "#small-images img"
        ) as NodeListOf<HTMLImageElement>;

        smallImages[0].classList.add("scale-125");

        smallImages.forEach((smallImage: HTMLImageElement) =>
            smallImage.addEventListener("click", (e) => {
                const clickedImage = e.target.src;
                smallImages.forEach((smallImage) =>
                    smallImage.classList.remove("scale-125")
                );
                e.target.classList.add("scale-125");
                mainImage.src = clickedImage;
            })
        );

        const images = JSON.parse(mainImage.dataset.images) as Array<String>;
        const buttons = document.querySelectorAll(
            "#main-image-wrapper i"
        ) as NodeListOf<HTMLSpanElement>;

        const nextImage = (bool) => {
            const currentImage = mainImage.src;
            const currentIndex = images.findIndex(
                (image) => image === currentImage
            );
            let newIndex = 0;
            if (!bool) {
                if (currentIndex === 0) newIndex = images.length - 1;
                else newIndex = currentIndex - 1;
            } else {
                if (currentIndex === images.length - 1) newIndex = 0;
                else newIndex = currentIndex + 1;
            }
            mainImage.src = images[newIndex];
            smallImages.forEach((smallImage) =>
                smallImage.classList.remove("scale-125")
            );
            smallImages[newIndex].classList.add("scale-125");
        };
        const prevButton = document.querySelector("#prev-button");
        const nextButton = document.querySelector("#next-button");

        prevButton.addEventListener("click", () => nextImage(false));
        nextButton.addEventListener("click", () => nextImage(true));
    </script>
</div>
